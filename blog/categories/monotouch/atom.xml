<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: MonoTouch | Me:ICanWriteCode]]></title>
  <link href="http://prashantvc.github.com/blog/categories/monotouch/atom.xml" rel="self"/>
  <link href="http://prashantvc.github.com/"/>
  <updated>2013-02-26T19:42:10+05:30</updated>
  <id>http://prashantvc.github.com/</id>
  <author>
    <name><![CDATA[Prashant Cholachagudda]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Monotouch: UIView to Image]]></title>
    <link href="http://prashantvc.github.com/blog/2013/02/25/monotouch-uiview-to-image/"/>
    <updated>2013-02-25T22:49:00+05:30</updated>
    <id>http://prashantvc.github.com/blog/2013/02/25/monotouch-uiview-to-image</id>
    <content type="html"><![CDATA[<p>I wrote this code snippet quite a while ago to make it easy to print a
UIView from a iOS device. Hope it helps you too.</p>

<p>``` csharp UIViewToImage.cs https://gist.github.com/prashantvc/4657263/raw/a64b8a821b860201e0420c3e735326f80063386a/UIViewToImage.cs View Raw
public static class Extensions
{</p>

<pre><code>public static UIImage ToImage (this UIView view)
{
    RectangleF canvasRect = view.Bounds;
    UIGraphics.BeginImageContextWithOptions (canvasRect.Size, false, 0.0f);

    CGContext ctx = UIGraphics.GetCurrentContext ();
    ctx.FillRect (canvasRect);
    view.Layer.RenderInContext (ctx);

    UIImage newImage = UIGraphics.GetImageFromCurrentImageContext ();
    UIGraphics.EndImageContext ();
    NSData imgData = newImage.AsPNG ();

    return UIImage.LoadFromData (imgData);
}
</code></pre>

<p>}
```</p>
]]></content>
  </entry>
  
</feed>
